syntax = "proto2";

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";
import "model/payment/client.proto";

package app.softnetwork.payment.message.SoftPayAccountEvents;

option (scalapb.options) = {
  single_file: true
  flat_package: true
  import: "app.softnetwork.persistence.message._"
  import: "app.softnetwork.persistence.model._"
  import: "app.softnetwork.protobuf.ScalaPBTypeMappers._"
  import: "app.softnetwork.serialization._"
  import: "app.softnetwork.account.message._"
  import: "app.softnetwork.payment.model._"
  import: "app.softnetwork.payment.message.SoftPayAccountEvents._"
  import: "app.softnetwork.payment.serialization._"
  preserve_unknown_fields: false
  preamble: "sealed trait SoftPayAccountEvent extends AccountEvent"
};

message SoftPayAccountCreatedEvent {
  option (scalapb.message).extends = "ProtobufEvent";
  option (scalapb.message).extends = "SoftPayAccountEvent";
  option (scalapb.message).extends = "AccountCreatedEvent[SoftPayAccount]";
  required app.softnetwork.payment.model.SoftPayAccount document = 1;
}

message SoftPayAccountProviderRegisteredEvent {
  option (scalapb.message).extends = "ProtobufEvent";
  option (scalapb.message).extends = "SoftPayAccountEvent";
  required app.softnetwork.payment.model.SoftPayAccount.Client client = 1;
  required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
}

message SoftPayAccountTokenRegisteredEvent {
  option (scalapb.message).extends = "ProtobufEvent";
  option (scalapb.message).extends = "SoftPayAccountEvent";
  required app.softnetwork.payment.model.SoftPayAccount.Client client = 1;
  required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
}

message SoftPayAccountTokenRefreshedEvent {
  option (scalapb.message).extends = "ProtobufEvent";
  option (scalapb.message).extends = "SoftPayAccountEvent";
  required app.softnetwork.payment.model.SoftPayAccount.Client client = 1;
  required google.protobuf.Timestamp lastUpdated = 2 [(scalapb.field).type = "java.time.Instant"];
}
